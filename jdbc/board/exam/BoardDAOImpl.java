package jdbc.board.exam;
//DAO : Data access object
//DB에 관련된 작업은 DAO에서만 하돠록 약속. 데이터관련 작업은 무조건 여기서 해줘야한다. 
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

//tb_board테이블을 액세스하는 기능이 정의된 클래스
public class BoardDAOImpl implements BoardDAO {

	public int insert(BoardDTO board) {
		//값을 넘기는 부분에서 sysout출력하여 확인해보자. 
		System.out.println("dto사용메소드:"+board);
		Connection con = null;
		PreparedStatement stmt = null;

		String sql = "insert into tb_board values(board_seq.nextval,?,?,?,sysdate,0)";
		int result = 0; //메소드의 실행결과가 저장될 변수 
		try {
			con = DBUtil.getConnect();

			// 1. PreparedStatement 생성
			stmt = con.prepareStatement(sql);

			/// 2. ?에 값 전달하기
			stmt.setString(1, board.getId());
			stmt.setString(2, board.getTitle());
			stmt.setString(3, board.getContent());

			// 3. 실행하기 : 만약 오류가 발생한다면, try문 끝까지 못가고 catch로 가서
			// result = 0이 유지될 수 있다.
			result = stmt.executeUpdate();

			System.out.println(result + "개 행 삽입성공");

		} 
		 catch (SQLException e) {
			e.printStackTrace();// 오류추적
			System.out.println("연결 실패 : " + e.getMessage());
		} finally {
			DBUtil.close(null,stmt,con); //rs는 없으니까
		}
		return result;

	}

	public int update(String id, int boardNum) {

	
		Connection con = null;
		PreparedStatement stmt = null;
		StringBuffer sql = new StringBuffer();
		sql.append("update tb_board ");
		sql.append("set id = ? ");
		sql.append("where boardnum = ? ");
		int result = 0; //수정 결과를 저장할 변수
		try {
			con = DBUtil.getConnect();
			stmt = con.prepareStatement(sql.toString());
			stmt.setString(1, id);
			stmt.setInt(2, boardNum);
			result = stmt.executeUpdate(); // 위에서 sql 처리 해주니까 여기엔 sql쓸필요없다.
			System.out.println(result + "개 행 수정성공");

		}  catch (SQLException e) {
			e.printStackTrace();// 오류추적
			System.out.println("연결 실패 : " + e.getMessage());
		} finally {
			DBUtil.close(null, stmt, con);
		}
		return result;
	}
	
	public int delete(int boardnum) {

		
		Connection con = null;
		PreparedStatement stmt = null;
		String sql = "delete from tb_board where boardnum = ?";
		int result = 0 ; //결과값을 저장할 변수

		try {
			con = DBUtil.getConnect();
			stmt = con.prepareStatement(sql);
			stmt.setInt(1,boardnum);
			result = stmt.executeUpdate();
			System.out.println(result + "개 행 삭제성공");
		} catch (SQLException e) {
			e.printStackTrace();
		} finally {
			DBUtil.close(null, stmt, con);
		}
		return result;
	}
	
	
	public void select() {
	
		String sql = "select * from tb_board";
		Connection con = null;
		PreparedStatement stmt = null;
		ResultSet rs = null;

		try { // connection으로부터 statement로부터 resultset
			con = DBUtil.getConnect();
			stmt = con.prepareStatement(sql);
			rs = stmt.executeQuery();
			while (rs.next()) {
				System.out.print(rs.getString(1)+"\t");
				System.out.print(rs.getString(2)+"\t");
				System.out.print(rs.getString(3)+"\t");
				System.out.print(rs.getString(4)+"\t");
				System.out.print(rs.getDate(5)+"\t");
				System.out.print(rs.getInt(6)+"\t");
				System.out.println();
			}
		
		} catch (SQLException e) {
			e.printStackTrace();
		} finally { 
			DBUtil.close(rs,stmt,con);
		}
		
	}
	public int insert(String id, String title, String content) {
		//값을 넘기는 부분에서 sysout출력하여 확인해보자. 
		Connection con = null;
		PreparedStatement stmt = null;

		String sql = "insert into tb_board values(board_seq.nextval,?,?,?,sysdate,0)";
		int result = 0; //메소드의 실행결과가 저장될 변수 
		try {
			con = DBUtil.getConnect();

			// 1. PreparedStatement 생성
			stmt = con.prepareStatement(sql);

			/// 2. ?에 값 전달하기
			stmt.setString(1, id);
			stmt.setString(2, title);
			stmt.setString(3, content);

			// 3. 실행하기 : 만약 오류가 발생한다면, try문 끝까지 못가고 catch로 가서
			// result = 0이 유지될 수 있다.
			result = stmt.executeUpdate();

			System.out.println(result + "개 행 삽입성공");

		} 
		 catch (SQLException e) {
			e.printStackTrace();// 오류추적
			System.out.println("연결 실패 : " + e.getMessage());
		} finally {
			DBUtil.close(null,stmt,con); //rs는 없으니까
		}
		return result;

	}
	
	
	
}
